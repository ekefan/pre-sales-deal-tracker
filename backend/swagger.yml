swagger: "2.0"
info:
  description: |
    Custom API for pre-sales deal tracker
    All end points require and produce application/json
    - a user can have either an admin or a sales role
    - auth end points require that the client requests are from an admin user
  version: 1.0.0
  title: API Endpoints for Pre-sales Deal Tracker
host: "localhost:8080" #yet to be set or use localhost :)
basePath: /
tags: []
schemes:
  - http
  - https
paths:
    /auth/register:
      post:
        summary: creates a new user
        description: This end point creates a new user with a default password.
        parameters:
          - name: createUserReq
            in: body
            description: |
              holds the data - username, fullname, email and role, needed to create a user. 
            required: true
            schema:
              $ref: '#/definitions/createUserReq'
        responses:
          201:
            description: user was successfully created, response body holds the user_id which is never less than 1 and in the header, the location to get the resource
            schema:
              $ref: '#/definitions/createUserResp'
          400:
            description: bad request, the request body has invalid fields for creating a user
            schema:
              $ref: '#/definitions/errorResp'
          401:
            description: unauthorized, the user with an invalid access token accessed the end point
            schema:
              $ref: '#/definitions/errorResp'
            
          409:
            description: a user with already exists with similar req details
            schema:
              $ref: '#/definitions/errorResp'
          500:
            description: server error
            schema:
              $ref: '#/definitions/errorResp'
    /login:
      post:
        summary: logs users into the application
        description: This end point is used to login a user
        parameters:
          - name: loginReq
            in: body
            description: | 
              holds the login details of the user
            required: true
            schema:
              $ref: '#/definitions/loginReq'
        responses:
          200:
            description: user was successfully logged in
            schema:
              $ref: '#/definitions/loginResp'
          400:
            description: bad request, the request body has invalid fields for creating a user
            schema:
              $ref: '#/definitions/errorResp'
          401:
            description: unauthorized, invalid password
            schema:
              $ref:
                '#/definitions/errorResp'
          404:
            description: user with username doesn't exist
            schema:
              $ref:
                '#/definitions/errorResp'
          500:
            description: server error
            schema:
              $ref:
                '#/definitions/errorResp'
definitions:
  createUserReq:
    type: object
    properties:
      username:
        type: string
        default: lily
      fullname:
        type: string
        default: Lily Wise
      email:
        type: string
        default: lily@gmail.com
      role:
        type: string
        default: sales
  createUserResp:
    type: object
    properties:
      user_id:
        type: integer
        default: 1
        description: must not be less than 1
  errorResp:
    type: object
    properties:
      error:
        type: string
        default: the defined error
  user_data:
    type: object
    properties:
      user_id:
        type: integer
        default: 1
      username:
        type: string
        default: lily
      fullname:
        type: string
        default: Lily Wise
      role:
        type: string
        default: sales
      email:
        type: string
        default: lily@gmail.com
      password_changed:
        type: boolean
        default: false
      updated_at:
        type: string
        default: 2024-09-09 04:05:09
  loginReq:
    type: object
    properties:
      username:
        type: string
        default: lily
      password:
        type: string
        default: vasDeal45
  loginResp:
    type: object
    properties:
      access_token:
        type: string
        default: "alongrandomstringofrandomcharactersusedastheaccesstoken"
      user_data:
        $ref: '#/definitions/user_data'
        
        
        
            