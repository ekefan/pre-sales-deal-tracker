swagger: "2.0"
info:
  description: |
    Custom API for pre-sales deal tracker
    All end points require and produce application/json
    - a user can have either an admin or a sales role
    - all auth end points are associated with authentication and authorization management
    - All end points except /auth/login require an authorization header with a bearer token
  version: 1.0.0
  title: API Endpoints for Pre-sales Deal Tracker
host: "localhost:8080" #yet to be set or use localhost :)
basePath: /
tags: []
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: Add Authorization to the request header with a value of 'Bearer <token>'
schemes:
  - http
  - https
paths:
  /auth/login:
    post:
      tags: [auth]
      summary: logs users into the application
      description: This end point is used to login a user
      parameters:
        - name: loginReq
          in: body
          description: |
            holds the login details of the user
          required: true
          schema:
            $ref: "#/definitions/loginReq"
      responses:
        200:
          description: |
            user was successfully logged in
            Note: if resource has not been updated, the updated_at field will be same as the created_at field.
          schema:
            $ref: "#/definitions/loginResp"
        400:
          description: bad request, the request body has invalid fields for creating a user
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, invalid password
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: user with username doesn't exist
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /users:
    post:
      security:
        - Bearer: []
      tags: [users]
      summary: creates a new user
      description: This end point creates a new user with a default password, request is restricted to admins.
      parameters:
        - name: createUserReq
          in: body
          description: |
            holds the data - username, fullname, email and role, needed to create a user.
          required: true
          schema:
            $ref: "#/definitions/userReq"
      responses:
        201:
          description: user was successfully created, response body holds username and in the header the location to get the resource
          schema:
            $ref: "#/definitions/createUserResp"
        400:
          description: bad request, the request body has invalid fields for creating a user
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, invalid access token
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        409:
          description: a user with already exists with similar req details
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    get:
      security:
        - Bearer: []
      tags: [users]
      summary: get all users
      description: |
        If no other user exist an empty array of user_data is returned.
        The least page_id is 1, and page_size should be 10
        This end point is restricted to admins
      parameters:
        - name: page_id
          in: query
          description: minimum is 1, the pagination offset, sequestially identifies the page to get
          required: true
          type: integer
          default: 1
          minimum: 1
        - name: page_size
          in: query
          description: should be 10, the pagination limit, identifies the number of resources in one page
          required: true
          type: integer
          default: 10
          minimum: 5
          maximum: 10
      responses:
        200:
          description: successfull request
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/definitions/user_data"
              pagination:
                $ref: "#/definitions/pagination"
        400:
          description: |
            invalid request parameters, use integers greater than zero
            page_id is at least 1, and page_size should be 10
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized access, request from a user who's role is not admin
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /users/{user_id}:
    get:
      security:
        - Bearer: []
      tags: [users]
      summary: get user by user_id
      description: "user_id is always greater than 0"
      parameters:
        - name: user_id
          in: path
          required: true
          default: 2
          type: integer
          minimum: 1
      responses:
        200:
          description: request succesful
          schema:
            $ref: "#/definitions/user_data"
        400:
          description: invalid request parameter, user an integer greater than zero
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        404:
          description: resource with user_id not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    put:
      security:
        - Bearer: []
      tags: [users]
      summary: updates a user
      description: |
        For updating users, user_id is always greater than 0
        this end point is restricted to admins only.
      parameters:
        - name: user_id
          in: path
          type: integer
          required: true
          default: 2
          minimum: 1
        - name: updateUserReq
          in: body
          required: true
          schema:
            $ref: "#/definitions/userReq"
      responses:
        204:
          description: update was successful
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: invalid request parameter, user an integer greater than zero
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized access, request from a user who's role is not admin
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        409:
          description: user already exist with similar details
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      security:
        - Bearer: []
      tags: [users]
      summary: deletes a user
      description: |
        For deleting users, this end point is restricted to admins only
        user_id is always greater than 0
      parameters:
        - name: user_id
          in: path
          type: integer
          required: true
          default: 2
          minimum: 1
      responses:
        204:
          description: delete was successful
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: invalid request parameter, user an integer greater than zero
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        404:
          description: resource doesn't exist
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /users/{user_id}/password/reset:
    patch:
      security:
        - Bearer: []
      tags: [users]
      summary: resets a user's password
      description: |
        Allows the admin to reset a user's password to default, this end point is restricted to admins only
        user_id is always greater than 0.
      parameters:
        - name: user_id
          in: path
          type: integer
          required: true
          default: 2
          minimum: 1
      responses:
        204:
          description: password reset was successful
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: invalid request parameter, user an integer greater than zero
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: '#/definitions/errorResponse'
        404:
          description: resource doesn't exist
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /users/{user_id}/password:
    patch:
      security:
        - Bearer: []
      tags: [users]
      summary: change a user's password
      description: |
        Allows all users to update their password, user_id is always greater than 0
      parameters:
        - name: user_id
          in: path
          type: integer
          required: true
          default: 2
          minimum: 1
        - name: updatePasswordReq
          in: body
          required: true
          schema:
            $ref: "#/definitions/updatePasswordReq"
      responses:
        204:
          description: password update was successful
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: |
            Invalid request parameters:
              - user_id: Must be an integer greater than 0
              - old_password: A string representing the user's current password
              - new_password: A string representing the password the user wants to change to
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /pitch_requests:
    post:
      security:
        - Bearer: []
      tags: [pitch_requests]
      summary: creates a pitch request
      description: |
        This end point is used to create a pitch request
        Restricted to sales user only
      parameters:
        - name: createPitchReq
          in: body
          required: true
          schema:
            $ref: "#/definitions/createPitchReq"
      responses:
        201:
          description: resource created
          schema:
            $ref: "#/definitions/createPitchResp"
        400:
          description: invalid request paramters
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorize, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    get:
      security:
        - Bearer: []
      tags: [pitch_requests]
      summary: gets all pitch request
      description: |
        This end point returns all the pitch requests belonging to the user who makes the request.
        End point is restricted to sales users only
      parameters:
        - name: page_id
          in: query
          required: true
          type: integer
          minimum: 1
          default: 1
        - name: page_size
          in: query
          required: true
          type: integer
          description: should be 10
          default: 10
      responses:
        200:
          description: successful request
          schema:
            type: object
            properties:
              pitch_data:
                type: array
                items:
                  $ref: "#/definitions/pitch_data"
              pagination:
                $ref: "#/definitions/pagination"
        400:
          description: |
            Invalid parameters
            - page_id: integer greater than 1
            - page_size: integer, should be 10
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorize, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /pitch_requests/{pitch_id}:
    put:
      security:
        - Bearer: []
      tags: [pitch_requests]
      summary: updates a pitch request
      description: |
        This endpoint updates a pitch request
        This end point is open to admins and sales users
      parameters:
        - name: pitch_id
          in: path
          required: true
          type: integer
          minimum: 1
          default: 1
        - name: updatePitchReq
          in: body
          required: true
          description: |
            a null customer request should be used when the admin is updating the pitch request.
            when a sales user is updating the pitch requests the customer request is an array with at least one array item.
            Eample: customer_request: ["EDMS"]
          schema:
            $ref: "#/definitions/updatePitchReq"
      responses:
        204:
          description: resource successfully updated
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: |
            Invalid parameter
            - pitch_id: integer greater than 1
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorize, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      security:
        - Bearer: []
      tags: [pitch_requests]
      summary: deletes a pitch request
      description: |
        A sales user deletes only pitch requests associated with them
      parameters:
        - name: pitch_id
          in: path
          required: true
          type: integer
          minimum: 1
          default: 1
      responses:
        204:
          description: resource successfully updated
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: |
            Invalid parameter
            - pitch_id: integer greater than 1
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorize, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /deals:
    post:
      security:
        - Bearer: []
      tags: [deals]
      summary: creates a deal
      description: |
        An admin creates a deal with this end point
        This end point is restricted to admins only
      parameters:
        - name: createDealReq
          in: body
          required: true
          schema:
            $ref: "#/definitions/createDealReq"
      responses:
        201:
          description: resource created
          schema:
            $ref: "#/definitions/createDealResp"
        400:
          description: invalid request parameters
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, access_token is invalid or not provided
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: "#/definitions/errorResponse"
          schema:
            $ref: "#/definitions/errorResponse"
    get:
      security:
        - Bearer: []
      tags: [deals]
      summary: gets  deals
      description: |
        returns a list of deals based on the query filter
        This end point is open to all users
      parameters:
        - name: status
          in: query
          type: string
          required: false
        - name: awarded
          in: query
          type: boolean
          required: false
          default:
        - name: page_id
          in: query
          type: integer
          required: true
          default: 1
          minimum: 1
        - name: page_size
          in: query
          type: integer
          required: true
          default: 10
          description: should be 10
      responses:
        200:
          description: request successful
          schema:
            type: object
            properties:
              deals_data:
                type: array
                items:
                  $ref: "#/definitions/deals_data"
              pagination:
                $ref: "#/definitions/pagination"
        400:
          description: invalid request parameters
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
  /deals/{deal_id}:
    put:
      security:
        - Bearer: []
      tags: [deals]
      summary: updates a deal
      description: |
        An admin updates a deal to keep the current progress, also to close the deal
      parameters:
        - name: deal_id
          in: path
          required: true
          default: 1
          type: integer
          minimum: 1
        - name: updateDealReq
          in: body
          required: false
          schema:
            $ref: "#/definitions/updateDealsReq"
      responses:
        204:
          description: resource successfully updated
          schema:
            $ref: "#/definitions/successMessage"
        400:
          description: |
            Invalid parameter
            - pitch_id: integer greater than 1
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      security:
        - Bearer: []
      tags: [deals]
      summary: deletes a deal
      description: |
        Restricted to admins only
      parameters:
        - name: deal_id
          in: path
          required: true
          default: 1
          type: integer
          minimum: 1
      responses:
        204:
          description: resource was removed successfully
        400:
          description: |
            Invalid parameter
            - pitch_id: integer greater than 1
          schema:
            $ref: "#/definitions/errorResponse"
        401:
          description: unauthorized, auth token invalid or not provided
          schema:
            $ref: "#/definitions/errorResponse"
        403:
          description: forbidden, user is not authorized to access this resource
          schema:
            $ref: "#/definitions/errorResponse"
        404:
          description: resource not found
          schema:
            $ref: "#/definitions/errorResponse"
        500:
          description: server error
          schema:
            $ref: "#/definitions/errorResponse"

definitions:
  successMessage:
    type: object
    properties:
      message:
        type: string
        default: successful
  userReq:
    type: object
    properties:
      username:
        type: string
        default: lily
        minLength: 4
        maxLength: 6
      full_name:
        type: string
        default: Lily Wise
      email:
        type: string
        default: lily@gmail.com
      role:
        type: string
        default: sales
    required:
      - username
      - fullname
      - email
      - role
  createUserResp:
    type: object
    properties:
      user_id:
        type: integer
        default: 2
        minimum: 1
        description: must not be less than 1
  errorResponse:
    type: object
    properties:
      status_code:
        type: integer
        description: standard http response status code
      error:
        type: object
        properties:
          code:
            type: string
            description: sentinel description for standard http response codes
          message:
            type: string
            description: a human read able message describing the error
            default: a human readable message describing the error
          details:
            type: string
            description: possible reasons why the error occurred
            default: possible reason the error occurred
  user_data:
    type: object
    properties:
      user_id:
        type: integer
        default: 2
        minimum: 1
      username:
        type: string
        default: lily
      full_name:
        type: string
        default: Lily Wise
      role:
        type: string
        default: sales
      email:
        type: string
        default: lily@gmail.com
      password_changed:
        type: boolean
        default: false
      updated_at:
        type: string
        default: 2024-09-09T04:05:09Z
      created_at:
        type: string
        default: 2024-09-09T04:05:09Z
  loginReq:
    type: object
    properties:
      username:
        type: string
        default: lily
        minLength: 4
        maxLength: 6
      password:
        type: string
        default: vasDeal45
    required:
      - username
      - password
  loginResp:
    type: object
    properties:
      access_token:
        type: string
        default: "alongrandomstringofrandomcharactersusedastheaccesstoken"
      user_data:
        $ref: "#/definitions/user_data"
  pagination:
    type: object
    properties:
      total_records:
        type: integer
        default: 20
        minimum: 1
      current_page:
        type: integer
        default: 1
        minimum: 1
      total_pages:
        type: integer
        default: 2
        minimum: 1
      has_next:
        type: boolean
        default: true
      has_previous:
        type: boolean
        default: false
  updatePasswordReq:
    type: object
    properties:
      old_password:
        type: string
        default: vasDeal45
      new_password:
        type: string
        default: newP@ssword123
    required:
      - old_password
      - new_password
  updatePitchReq:
    type: object
    properties:
      admin_viewed:
        type: boolean
        default: false
      customer_request:
        type: array
        items:
          type: string
        minItems: 0
        default:
        x-nullable: true
    required:
      - admin_viewed
      - customer_request
  createPitchReq:
    type: object
    properties:
      user_id:
        type: integer
        minimum: 1
        default: 2
      customer_name:
        type: string
        default: Ministry of Women Affairs
      customer_request:
        type: array
        items:
          type: string
        minItems: 1
        default:
          - EDMS
          - IP Video Conferencing
          - Fiber Internet
      admin_task:
        type: string
        default: costing
      admin_deadline:
        type: string
        default: 2024-09-29T09:06:09Z
        description: datetime
      admin_viewed:
        type: boolean
        default: false
    required:
      - user_id
      - customer_name
      - customer_request
      - admin_task
      - admin_deadline
      - admin_viewed
  createPitchResp:
    type: object
    properties:
      pitch_id:
        type: integer
        minimum: 1
        default: 1
  pitch_data:
    type: object
    properties:
      pitch_id:
        type: integer
        minimum: 1
        default: 1
      user_id:
        type: integer
        minimum: 1
        default: 2
      customer_name:
        type: string
        default: Ministry of Women Affairs
      customer_request:
        type: array
        items:
          type: string
        minItems: 1
        default:
          - EDMS
          - IP Video Conferencing
          - Fiber Internet
      admin_task:
        type: string
        default: costing
      admin_deadline:
        type: string
        default: 2024-09-29T09:06:09Z
        description: datetime
      admin_viewed:
        type: boolean
        default: false
      updated_at:
        type: string
        default: 2024-09-29T09:06:09Z
      created_at:
        type: string
        default: 2024-09-28T09:06:09Z
  createDealReq:
    type: object
    properties:
      pitch_id:
        type: integer
        minimum: 1
        default: 1
    required:
      - pitch_id
  createDealResp:
    type: object
    properties:
      deal_id:
        type: integer
        default: 1
        minimum: 1
  deals_data:
    type: object
    properties:
      deal_id:
        type: integer
        default: 1
      pitch_id:
        type: integer
        default: 1
      sales_rep_name:
        type: string
        default: Lily Wise
      customer_name:
        type: string
        default: Ministry of Women Affairs
      services_to_render:
        type: array
        items:
          type: string
          default:
            - EDMS
            - IP Video Conferencing
            - Fiber Internet
      status:
        type: string
        default: ongoing
      department:
        type: string
        default: pre-sales
        description: there are thre major departments, sales, pre-sales and project-manager
      net_total_cost:
        type: integer
        default: 10000.00
      profit:
        type: integer
        default: 1000.00
      awarded:
        type: boolean
        default: false
      created_at:
        type: string
        default: 2024-09-05T09:08:05Z
      updated_at:
        type: string
        default: 2024-09-06T10:08:05Z
  updateDealsReq:
    type: object
    properties:
      sales_rep_name:
        type: string
        default: Lily Foe
      services_to_render:
        type: array
        items:
          type: string
          default: EDMS
      status:
        type: string
        default: closed
      department:
        type: string
        default: sales
      net_total_cost:
        type: integer
        default: 80000.00
      profit:
        type: integer
        default: 2000.00
      awarded:
        type: boolean
        default: true
    required:
      - sales_rep_name
      - services_to_render
      - status
      - department
      - net__total
      - profit
      - awarded
